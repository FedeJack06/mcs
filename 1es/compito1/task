Create un classe di Numeri Complessi derivandola da TVector2 (classe di ROOT per vettori 2D). La classe deve avere:
    costruttore da TVector2 (necessaria per la corretta conversione delle operazioni matematiche);
    la ridefinizione di << che stampi opportunamente il numero complesso;
    la ridefinizione di >> che legga un numero complesso;
    un metodo per il complesso coniugato
    gli operatori +,-,*,/ e moltiplicazione per scalare (per alcuni di questi, ma non per tutti, vanno bene quelli default derivati da TVector2).

    Create un breve programma di test.

Create una classe Fifo (first in first out) derivandola da vector<double>.
        Il costruttore dovrà fissare la lunghezza e il metodo che aggiunge un valore dovrà fare in modo che quando l'array è pieno, all'aggiunta di un nuovo elemento, venga eliminato il valore più vecchio (aiuto: per accedere a vector dentro la classe derivata usate this). 
    Creato un metodo di accesso (at o [])
    Preparate anche una versione ottimizzata in cui i dati non vengono spostati ma sovrascritti, garantendo però che l'accesso tramite indice li mostri nell'ordine corretto.

Definite una classe Poligono: i dati sono un vector<TVector2>. Definite area e perimetro come un metodi puramente virtual (e quindi astratto).
    Derivate una classe PoligonoIrregolare dove Area e Perimetro vengono calcolati in maniera generale sulla base dei vertici (per l'Area vedi formula di Gaus).
    Derivate una classe PoligonoRegolare dove Area e Perimetro sono calcolate con le note formule e i vertici vengono assegnati ponendo il baricentro della figura nell'origine. 